#!/bin/sh

setup_local_ansible

ubuntu_ensure_package_installed build-essential
ubuntu_ensure_package_installed cmake
ubuntu_ensure_package_installed python-dev

# Remove everything from vim
cd ~/
rm -rf .vim .vimrc

# Write the .vimrc file
cat << END_OF_VIM_CONFIG > .vimrc
" if $COLORTERM == 'gnome-terminal'
  set t_Co=256
" endif

" VIM Customizations
set nocompatible
set modelines=0
set encoding=utf-8
set scrolloff=5
set sidescrolloff=5
set display+=lastline
set autoindent
set showmode
set complete-=i
set shiftround
set nrformats-=octal
set smarttab
set showcmd
set hidden
set wildmenu
set wildmode=list:longest
set wildignore=*.o,*.obj,*.bak,*.exe
set visualbell
set cursorline
set ttyfast
set ruler
set backspace=indent,eol,start
set laststatus=2
set relativenumber
set hls
set timeoutlen=10000
filetype plugin on

if &encoding ==# 'latin1' && has('gui_running')
	set encoding=utf-8
endif

set ignorecase
set smartcase
set gdefault
set incsearch
set showmatch
set hlsearch
" Use <C-L> to clear the highlighting of :set hlsearch.
if maparg('<C-L>', 'n') ==# ''
	nnoremap <silent> <C-L> :nohlsearch<CR><C-L>
endif

set backupdir=~/tmp,/tmp,/storage/emulated/legacy/tmp " backups (~)
set directory=~/tmp,/tmp,/storage/emulated/legacy/tmp " swap files
" set backup               " enable backups

" Code Style
set tabstop=4
set shiftwidth=4
set softtabstop=4

" Vimdiff
set diffopt+=iwhite

" Pathogen
call pathogen#infect()
call pathogen#helptags()

" Visual Style
let base16colorspace=256
set background=dark
colorscheme base16-default
set list
if &listchars ==# 'eol:$'
	set listchars=tab:>\ ,trail:-,extends:>,precedes:<,nbsp:+
	if !has('win32') && (&termencoding ==# 'utf-8' || &encoding ==# 'utf-8')
		let &listchars = "tab:\u21e5 ,trail:\u2423,extends:\u21c9,precedes:\u21c7,nbsp:\u00b7"
	endif
endif

" GUI Visual Style
set guifont=Source\ Code\ Pro\ 12
set guioptions-=T
set guioptions-=r
set guioptions-=t
syntax on

" Key Mappings
map U <C-r>
imap <Home> <esc>^i

" Plugin: Gundo
nnoremap <F5> :GundoToggle<CR>

" Plugin: vim-multiple-cursors
let g:multi_cursor_use_default_mapping=0
let g:multi_cursor_next_key='<C-A-n>'
let g:multi_cursor_prev_key='<C-n>'
let g:multi_cursor_skip_key='<C-A-m>'
let g:multi_cursor_quit_key='<Esc>'

" Plugin: Rainbow
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['black',       'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]

let g:rbpt_max = 16
let g:rbpt_loadcmd_toggle = 0

" :nmap <C-f> :Unite file<cr>
" :nmap <C-b> :Unite buffer<cr>

" ==================

" Plugin: CtrlP
let g:ctrlp_map = '<C-f>'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_regexp = 1
let g:ctrlp_max_height = 22
let g:ctrlp_extensions = ['funky']
map <C-B> :CtrlPBuffer<CR>

" Plugin vim-fuzzyfinder
" map <C-f> :FufFile<cr>
" map <C-b> :FufBuffer<cr>

" Plugin: plasticboy/vim-markdown
let g:vim_markdown_folding_disabled=1
autocmd FileType md set wrap|set linebreak|set nolist "|set textwidth=0|set wrapmargin=0|set formatoptions+=1



" Plugin: neocomplecache
" let g:neocomplcache_enable_at_startup = 1
" let g:neocomplcache_enable_smart_case = 0
" let g:neocomplcache_enable_ignore_case = 0
" let g:neocomplcache_min_syntax_length = 3
" let g:neocomplcache_enable_cursor_hold_i = 1
" let g:neocomplcache_cursor_hold_i_time = 300
"
" autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
" autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
" autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
" autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
" autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
" if !exists('g:neocomplcache_omni_patterns')
"   let g:neocomplcache_omni_patterns = {}
" endif
" let g:neocomplcache_omni_patterns.php = '[^. \t]->\h\w*\|\h\w*::'

" Plugin: Plasticboy/vim-markdown
let g:vim_markdown_folding_disabled=1

" Plugin Git Gutter: Always show gutter
let g:gitgutter_sign_column_always = 1

END_OF_VIM_CONFIG

# Install Pathogen
if [ ! -d .vim/autoload ]; then
	mkdir -p .vim/autoload
fi
wget https://raw.github.com/tpope/vim-pathogen/master/autoload/pathogen.vim -O .vim/autoload/pathogen.vim

# Install Pathogen Supported vim Bundles
if [ ! -d .vim/bundle ]; then
	mkdir -p .vim/bundle
fi

cd ~/.vim/bundle
git clone https://github.com/chriskempson/base16-vim.git
#git clone https://github.com/nanotech/jellybeans.vim.git
#git clone https://github.com/scrooloose/nerdtree.git
#git clone git://github.com/altercation/vim-colors-solarized.git
#git clone https://github.com/Lokaltog/vim-distinguished.git
git clone https://github.com/terryma/vim-multiple-cursors.git
hg clone http://bitbucket.org/sjl/gundo.vim
#hg clone https://github.com/mattn/zencoding-vim.git
#git clone git://github.com/tristen/vim-sparkup.git
#git clone https://github.com/sjbach/lusty.git
git clone https://github.com/vim-scripts/YankRing.vim.git
git clone https://github.com/kien/ctrlp.vim.git
git clone https://github.com/kien/rainbow_parentheses.vim
git clone https://github.com/tpope/vim-surround.git
git clone https://github.com/tpope/vim-repeat.git
git clone https://github.com/tpope/vim-abolish.git
git clone https://github.com/tpope/vim-unimpaired.git
git clone https://github.com/tpope/vim-commentary.git
#git clone https://github.com/Shougo/neocomplcache.vim.git
#hg clone https://bitbucket.org/ns9tks/vim-fuzzyfinder; hg clone https://bitbucket.org/ns9tks/vim-l9
git clone https://github.com/scrooloose/syntastic.git
#git clone https://github.com/Shougo/unite.vim.git
git clone https://github.com/plasticboy/vim-markdown.git
git clone https://github.com/tacahiroy/ctrlp-funky.git
git clone https://github.com/Lokaltog/vim-easymotion.git
git clone https://github.com/tmhedberg/matchit.git
git clone https://github.com/editorconfig/editorconfig-vim.git
git clone git@github.com:garbas/vim-snipmate.git
git clone git://github.com/airblade/vim-gitgutter.git
git clone git://github.com/tpope/vim-fugitive.git
git clone https://github.com/Valloric/YouCompleteMe.git ; cd YouCompleteMe/ ;  git submodule update --init --recursive ; ./install.sh --clang-completer ; cd ../
git clone https://github.com/marijnh/tern_for_vim.git ; cd tern_for_vim/ ; npm install ; cd ..
git clone https://github.com/MarcWeber/vim-addon-mw-utils.git
git clone https://github.com/tomtom/tlib_vim
git clone https://github.com/rking/ag.vim
git clone https://github.com/godlygeek/tabular.git
git clone https://github.com/mtth/scratch.vim.git
